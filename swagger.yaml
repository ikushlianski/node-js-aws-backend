openapi: 3.0.0
info:
  description: Minsk tours ticket shop API
  version: 1.3.0
  title: Minsk tours ticket shop API
  contact:
    email: ilya_kushlianski@epam.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: "https://dspss0mtn2.execute-api.eu-west-1.amazonaws.com/{basePath}"
    description: API Gateway API. Currently, only 'dev' stage is supported
    variables:
      basePath:
        default: "dev"
        enum:
          - dev
          - qa
          - prod
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ikushlianski/minsk-tours-api/1.0.0


tags:
  - name: product
    description: Store's products section

paths:
  '/products':
    get:
      tags:
        - product
      summary: Get all products
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
    post:
      tags:
        - product
      summary: Create new product
      requestBody:
        description: Attributes required to create a product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                count:
                  type: number
              required:
                - title
                - price
                - count

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuidv4
                    example: "eeaf9772-f6b2-4896-b569-3f5a2b30dc4d"
        '400':
          description: Bad request. Body structure does not match the one that's expected
        '500':
          description: Internal server error


  '/products/{productId}':
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      parameters:
        - name: productId
          in: path
          description: 'ID of product to return: 1, 2, 3 etc. Values over 5 do not exist in mock database'
          required: true
          schema:
            type: string
            format: uuid
          example: 'eeaf9772-f6b2-4896-b569-3f5a2b30dc4d'

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '422':
          description: Invalid ID supplied
        '500':
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 'eeaf9772-f6b2-4896-b569-3f5a2b30dc4d'
        title:
          type: string
          example: Some title
        description:
          type: string
          example: Some longer description
        price:
          type: number
          example: 50
        count:
          type: number
          example: 15
